version: '3.8'

services:
  # Service Backend Node.js
  backend:
    build: .
    container_name: moulaclub-backend
    restart: unless-stopped
    ports:
      - "${PORT:-3000}:${PORT:-3000}"
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    networks:
      - moulaclub-network
    volumes:
      - ./logs:/app/logs

  # Service PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: moulaclub-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - moulaclub-network

  # Service Redis
  redis:
    image: redis:7-alpine
    container_name: moulaclub-redis
    restart: unless-stopped
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    command: >
      sh -c "
      if [ -n \"$$REDIS_PASSWORD\" ]; then
        redis-server --requirepass \"$$REDIS_PASSWORD\"
      else
        redis-server
      fi
      "
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - moulaclub-network

  # Service Nginx (Reverse Proxy optionnel)
  nginx:
    image: nginx:alpine
    container_name: moulaclub-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
    networks:
      - moulaclub-network

# RÃ©seaux
networks:
  moulaclub-network:
    driver: bridge

# Volumes persistants
volumes:
  postgres_data:
  redis_data:
